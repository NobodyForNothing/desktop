// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.2.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `eq`, `eq`, `eq`, `fmt`, `fmt`, `fmt`

Uint8List? encode({required RssSummary data, required bool compress}) =>
    RustLib.instance.api.crateApiSimpleEncode(data: data, compress: compress);

RssSummary? decode({required List<int> data, required bool decompress}) =>
    RustLib.instance.api
        .crateApiSimpleDecode(data: data, decompress: decompress);

/// RSS channel.
class Channel {
  final String? title;
  final String? link;
  final String? description;
  final String? language;
  final List<Item> items;

  const Channel({
    this.title,
    this.link,
    this.description,
    this.language,
    required this.items,
  });

  static Future<Channel> default_() =>
      RustLib.instance.api.crateApiSimpleChannelDefault();

  @override
  int get hashCode =>
      title.hashCode ^
      link.hashCode ^
      description.hashCode ^
      language.hashCode ^
      items.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Channel &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          link == other.link &&
          description == other.description &&
          language == other.language &&
          items == other.items;
}

class Item {
  final String? title;
  final String? description;
  final String? link;
  final String? guid;

  const Item({
    this.title,
    this.description,
    this.link,
    this.guid,
  });

  static Future<Item> default_() =>
      RustLib.instance.api.crateApiSimpleItemDefault();

  @override
  int get hashCode =>
      title.hashCode ^ description.hashCode ^ link.hashCode ^ guid.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Item &&
          runtimeType == other.runtimeType &&
          title == other.title &&
          description == other.description &&
          link == other.link &&
          guid == other.guid;
}

class RssSummary {
  final List<Channel> data;

  const RssSummary({
    required this.data,
  });

  @override
  int get hashCode => data.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is RssSummary &&
          runtimeType == other.runtimeType &&
          data == other.data;
}
